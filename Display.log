2021-11-30-12:27:26 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:27:26 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:27:26 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:27:26 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:27:28 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:27:28 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:27:28 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:27:28 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-12:27:28 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-12:27:28 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-12:27:28 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-12:27:28 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:27:28 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-12:27:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-12:27:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-12:27:32 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-12:27:48 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-12:27:48 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-12:27:51 [WARNING] [django.request:230] Not Found: /favicon.ico
2021-11-30-12:28:21 [INFO] [file_reading.views.S100Map:29] Selected file is 102CA0064700N07078W.h5
2021-11-30-12:28:21 [INFO] [file_reading.views.S100Map:38] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-12:28:21 [INFO] [root:50] file reading other case
2021-11-30-12:28:22 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000194A76A0>
2021-11-30-12:28:22 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000194A76A0> on colorbar
2021-11-30-12:28:22 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:28:23 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-12:28:25 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/S100map
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100Map.py", line 76, in create
    pyplot.savefig('/static/images/filenameXYZ.png') #save to the images directory
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\pyplot.py", line 859, in savefig
    res = fig.savefig(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\figure.py", line 2311, in savefig
    self.canvas.print_figure(fname, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backends\backend_qt5agg.py", line 81, in print_figure
    super().print_figure(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backend_bases.py", line 2217, in print_figure
    **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backend_bases.py", line 1639, in wrapper
    return func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backends\backend_agg.py", line 512, in print_png
    dpi=self.figure.dpi, metadata=metadata, pil_kwargs=pil_kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\image.py", line 1611, in imsave
    image.save(fname, **pil_kwargs)
  File "C:\Program Files\Python37\lib\site-packages\PIL\Image.py", line 2161, in save
    fp = builtins.open(filename, "w+b")
FileNotFoundError: [Errno 2] No such file or directory: '/static/images/filenameXYZ.png'
2021-11-30-12:29:55 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:29:55 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:29:55 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:29:55 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:29:55 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:29:55 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:29:55 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:29:55 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-12:29:55 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-12:29:55 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-12:29:55 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-12:29:55 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:29:55 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-12:29:56 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-12:29:56 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-12:29:56 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-12:30:00 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-12:30:00 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-12:30:08 [INFO] [file_reading.views.S100Map:29] Selected file is 102CA0064700N07078W.h5
2021-11-30-12:30:08 [INFO] [file_reading.views.S100Map:38] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-12:30:08 [INFO] [root:50] file reading other case
2021-11-30-12:30:09 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000019268E80>
2021-11-30-12:30:09 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000019268E80> on colorbar
2021-11-30-12:30:09 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:30:09 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-12:30:11 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/S100map
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100Map.py", line 77, in create
    return flask.jsonify({"result":"<div class='user_avatar' style='background-image:url('static/images/figure.png');width:240px;height:240px;background-size:cover;border-radius:10px;'>"})
  File "C:\Program Files\Python37\lib\site-packages\flask\json\__init__.py", line 343, in jsonify
    if current_app.config["JSONIFY_PRETTYPRINT_REGULAR"] or current_app.debug:
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 432, in __get__
    obj = instance._get_current_object()
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 554, in _get_current_object
    return self.__local()  # type: ignore
  File "C:\Program Files\Python37\lib\site-packages\flask\globals.py", line 47, in _find_app
    raise RuntimeError(_app_ctx_err_msg)
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
to interface with the current application object in some way. To solve
this, set up an application context with app.app_context().  See the
documentation for more information.
2021-11-30-12:31:46 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-12:31:46 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-12:34:11 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:34:11 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:34:11 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:34:11 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:34:11 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:34:11 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:34:11 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:34:11 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-12:34:11 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-12:34:11 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-12:34:11 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-12:34:11 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:34:11 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-12:34:11 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-12:34:11 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-12:34:12 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-12:34:15 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-12:34:16 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-12:34:24 [INFO] [file_reading.views.S100Map:29] Selected file is 102CA0064700N07078W.h5
2021-11-30-12:34:24 [INFO] [file_reading.views.S100Map:38] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-12:34:24 [INFO] [root:50] file reading other case
2021-11-30-12:34:24 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A637E48>
2021-11-30-12:34:24 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A637E48> on colorbar
2021-11-30-12:34:24 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:24 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:34:25 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-12:34:27 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/S100map
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100Map.py", line 77, in create
    return flask.jsonify({"result":"<div class='user_avatar' style='background-image:url('static/images/filenameXYZ.png');width:240px;height:240px;background-size:cover;border-radius:10px;'>"})
  File "C:\Program Files\Python37\lib\site-packages\flask\json\__init__.py", line 343, in jsonify
    if current_app.config["JSONIFY_PRETTYPRINT_REGULAR"] or current_app.debug:
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 432, in __get__
    obj = instance._get_current_object()
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 554, in _get_current_object
    return self.__local()  # type: ignore
  File "C:\Program Files\Python37\lib\site-packages\flask\globals.py", line 47, in _find_app
    raise RuntimeError(_app_ctx_err_msg)
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
to interface with the current application object in some way. To solve
this, set up an application context with app.app_context().  See the
documentation for more information.
2021-11-30-12:36:38 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:36:38 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:36:38 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:36:38 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:36:38 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:36:38 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:36:38 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:36:38 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-12:36:38 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-12:36:38 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-12:36:38 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-12:36:38 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:36:38 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-12:36:38 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-12:36:38 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-12:36:39 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-12:36:43 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-12:36:43 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-12:36:54 [INFO] [file_reading.views.S100Map:31] Selected file is 102CA0064700N07078W.h5
2021-11-30-12:36:54 [INFO] [file_reading.views.S100Map:40] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-12:36:54 [INFO] [root:52] file reading other case
2021-11-30-12:36:54 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A6487F0>
2021-11-30-12:36:54 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A6487F0> on colorbar
2021-11-30-12:36:54 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:36:54 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-12:36:56 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/S100map
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100Map.py", line 78, in create
    pyplot.savefig('/app/static/images/filenameXYZ.png') #save to the images directory
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\pyplot.py", line 859, in savefig
    res = fig.savefig(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\figure.py", line 2311, in savefig
    self.canvas.print_figure(fname, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backends\backend_qt5agg.py", line 81, in print_figure
    super().print_figure(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backend_bases.py", line 2217, in print_figure
    **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backend_bases.py", line 1639, in wrapper
    return func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\backends\backend_agg.py", line 512, in print_png
    dpi=self.figure.dpi, metadata=metadata, pil_kwargs=pil_kwargs)
  File "C:\Program Files\Python37\lib\site-packages\matplotlib\image.py", line 1611, in imsave
    image.save(fname, **pil_kwargs)
  File "C:\Program Files\Python37\lib\site-packages\PIL\Image.py", line 2161, in save
    fp = builtins.open(filename, "w+b")
FileNotFoundError: [Errno 2] No such file or directory: '/app/static/images/filenameXYZ.png'
2021-11-30-12:37:19 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:37:19 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:37:19 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-12:37:19 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-12:37:19 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:37:19 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-12:37:19 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:37:19 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-12:37:19 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-12:37:19 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-12:37:19 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-12:37:19 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-12:37:19 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-12:37:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-12:37:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-12:37:20 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-12:37:23 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-12:37:23 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-12:37:32 [INFO] [file_reading.views.S100Map:31] Selected file is 102CA0064700N07078W.h5
2021-11-30-12:37:32 [INFO] [file_reading.views.S100Map:40] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-12:37:32 [INFO] [root:52] file reading other case
2021-11-30-12:37:32 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192AAF98>
2021-11-30-12:37:32 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192AAF98> on colorbar
2021-11-30-12:37:32 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-12:37:32 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-12:37:34 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/S100map
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100Map.py", line 79, in create
    return flask.jsonify({"result":"<div class='user_avatar' style='background-image:url('static/images/filenameXYZ.png');width:240px;height:240px;background-size:cover;border-radius:10px;'>"})
  File "C:\Program Files\Python37\lib\site-packages\flask\json\__init__.py", line 343, in jsonify
    if current_app.config["JSONIFY_PRETTYPRINT_REGULAR"] or current_app.debug:
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 432, in __get__
    obj = instance._get_current_object()
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 554, in _get_current_object
    return self.__local()  # type: ignore
  File "C:\Program Files\Python37\lib\site-packages\flask\globals.py", line 47, in _find_app
    raise RuntimeError(_app_ctx_err_msg)
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
to interface with the current application object in some way. To solve
this, set up an application context with app.app_context().  See the
documentation for more information.
2021-11-30-13:15:54 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:15:54 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:15:54 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:15:54 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:15:54 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:15:54 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:15:54 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:15:54 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-13:15:54 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-13:15:54 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-13:15:54 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-13:15:54 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:15:54 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-13:15:54 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-13:15:54 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-13:15:54 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-13:15:55 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-13:16:00 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-13:16:00 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-13:16:08 [INFO] [file_reading.views.S100Map:34] Selected file is 102CA0064700N07078W.h5
2021-11-30-13:16:08 [INFO] [file_reading.views.S100Map:43] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:16:08 [INFO] [root:55] file reading other case
2021-11-30-13:16:08 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192A6E48>
2021-11-30-13:16:08 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192A6E48> on colorbar
2021-11-30-13:16:08 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:16:09 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-13:16:11 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/S100map
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100Map.py", line 82, in create
    return flask.jsonify({"result":"<div class='user_avatar' style='background-image:url('static/images/filenameXYZ.png');width:240px;height:240px;background-size:cover;border-radius:10px;'>"})
  File "C:\Program Files\Python37\lib\site-packages\flask\json\__init__.py", line 343, in jsonify
    if current_app.config["JSONIFY_PRETTYPRINT_REGULAR"] or current_app.debug:
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 432, in __get__
    obj = instance._get_current_object()
  File "C:\Program Files\Python37\lib\site-packages\werkzeug\local.py", line 554, in _get_current_object
    return self.__local()  # type: ignore
  File "C:\Program Files\Python37\lib\site-packages\flask\globals.py", line 47, in _find_app
    raise RuntimeError(_app_ctx_err_msg)
RuntimeError: Working outside of application context.

This typically means that you attempted to use functionality that needed
to interface with the current application object in some way. To solve
this, set up an application context with app.app_context().  See the
documentation for more information.
2021-11-30-13:17:44 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:17:44 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:17:44 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:17:44 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:17:44 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:17:44 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:17:44 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:17:44 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-13:17:44 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-13:17:44 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-13:17:44 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-13:17:44 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:17:44 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-13:17:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-13:17:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-13:17:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-13:17:45 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-13:17:48 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-13:17:48 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-13:17:56 [INFO] [file_reading.views.S100Map:35] Selected file is 102CA0064700N07078W.h5
2021-11-30-13:17:56 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:17:56 [INFO] [root:56] file reading other case
2021-11-30-13:17:57 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192A5F98>
2021-11-30-13:17:57 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192A5F98> on colorbar
2021-11-30-13:17:57 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:17:57 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-13:19:03 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-13:19:03 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-13:19:34 [INFO] [file_reading.views.S100Map:35] Selected file is 102CA0064700N07078W.h5
2021-11-30-13:19:34 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:19:34 [INFO] [root:56] file reading other case
2021-11-30-13:19:34 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018FBBEB8>
2021-11-30-13:19:34 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018FBBEB8> on colorbar
2021-11-30-13:19:34 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:52:27 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:52:27 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:52:27 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:52:27 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:52:27 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:52:27 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:52:27 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:52:27 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-13:52:27 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-13:52:27 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-13:52:27 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-13:52:27 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:52:27 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-13:52:28 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-13:52:28 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-13:52:28 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-13:52:28 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-13:52:30 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-13:52:30 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-13:52:39 [INFO] [file_reading.views.S100Map:35] Selected file is 102CA0064700N07078W.h5
2021-11-30-13:52:39 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:52:39 [INFO] [root:56] file reading other case
2021-11-30-13:52:39 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A424F60>
2021-11-30-13:52:39 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A424F60> on colorbar
2021-11-30-13:52:39 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:52:39 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-13:55:30 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:55:30 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:55:30 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:55:30 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:55:30 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:55:30 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:55:30 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:55:30 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-13:55:30 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-13:55:30 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-13:55:30 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-13:55:31 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:55:31 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-13:55:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-13:55:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-13:55:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-13:55:31 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-13:55:57 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:55:57 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:55:57 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-13:55:57 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-13:55:57 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:55:57 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-13:55:57 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:55:57 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-13:55:57 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-13:55:57 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-13:55:57 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-13:55:57 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-13:55:57 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-13:55:57 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-13:55:57 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-13:55:57 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-13:55:58 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-13:56:00 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-13:56:00 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-13:56:08 [INFO] [file_reading.views.S100Map:35] Selected file is 102CA0064700N07078W.h5
2021-11-30-13:56:08 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:56:08 [INFO] [root:56] file reading other case
2021-11-30-13:56:09 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000191D47F0>
2021-11-30-13:56:09 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000191D47F0> on colorbar
2021-11-30-13:56:09 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-13:56:09 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-13:56:19 [INFO] [file_reading.views.S100Map:35] Selected file is 102NOAA_LA_LB_AREA_GEO_subset2_07012019_0.h5
2021-11-30-13:56:19 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/S100map
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100Map.py", line 43, in create
    hf = h5py.File(file,'r')
  File "C:\Program Files\Python37\lib\site-packages\h5py\_hl\files.py", line 427, in __init__
    swmr=swmr)
  File "C:\Program Files\Python37\lib\site-packages\h5py\_hl\files.py", line 190, in make_fid
    fid = h5f.open(name, flags, fapl=fapl)
  File "h5py\_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py\_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "h5py\h5f.pyx", line 96, in h5py.h5f.open
OSError: Unable to open file (family driver should be used)
2021-11-30-13:56:28 [INFO] [file_reading.views.S100Map:35] Selected file is 102CA0054710N07080W.h5
2021-11-30-13:56:28 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:56:28 [INFO] [root:56] file reading other case
2021-11-30-13:56:28 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192C26D8>
2021-11-30-13:56:28 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000192C26D8> on colorbar
2021-11-30-13:56:28 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:57:44 [INFO] [file_reading.views.S100Map:35] Selected file is 102USA16LGBDC200408.H5
2021-11-30-13:57:44 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:57:44 [INFO] [root:56] file reading other case
2021-11-30-13:57:45 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001947F8D0>
2021-11-30-13:57:45 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001947F8D0> on colorbar
2021-11-30-13:57:45 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:58:23 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-13:58:23 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-13:58:32 [INFO] [file_reading.views.S100Map:35] Selected file is 102USA16LGBBC200408.H5
2021-11-30-13:58:32 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:58:32 [INFO] [root:56] file reading other case
2021-11-30-13:58:33 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000019336780>
2021-11-30-13:58:33 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000019336780> on colorbar
2021-11-30-13:58:33 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:58:41 [INFO] [file_reading.views.S100Map:35] Selected file is 102USA16LGBDC200408.H5
2021-11-30-13:58:41 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:58:41 [INFO] [root:56] file reading other case
2021-11-30-13:58:41 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001905D668>
2021-11-30-13:58:41 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001905D668> on colorbar
2021-11-30-13:58:41 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-13:58:49 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-13:58:49 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-13:58:56 [INFO] [file_reading.views.S100Map:35] Selected file is 102CA0064700N07078W.h5
2021-11-30-13:58:56 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-13:58:56 [INFO] [root:56] file reading other case
2021-11-30-13:58:56 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018C07A58>
2021-11-30-13:58:56 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018C07A58> on colorbar
2021-11-30-13:58:56 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:01:06 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:01:06 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:01:14 [INFO] [file_reading.views.S100Map:35] Selected file is 102CA0064700N07078W.h5
2021-11-30-14:01:14 [INFO] [file_reading.views.S100Map:44] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:01:14 [INFO] [root:56] file reading other case
2021-11-30-14:01:14 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000193C88D0>
2021-11-30-14:01:14 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000193C88D0> on colorbar
2021-11-30-14:01:14 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:01:44 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-14:01:44 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-14:01:44 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-14:01:44 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-14:01:44 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-14:01:44 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-14:01:44 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-14:01:44 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-14:01:44 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-14:01:44 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-14:01:44 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-14:01:44 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-14:01:44 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-14:01:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-14:01:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-14:01:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-14:01:45 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-14:01:47 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:01:47 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:01:56 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-11-30-14:01:56 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:01:56 [INFO] [root:53] file reading other case
2021-11-30-14:01:56 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018DB9FD0>
2021-11-30-14:01:56 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018DB9FD0> on colorbar
2021-11-30-14:01:56 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:01:56 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-14:02:08 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:02:08 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:02:15 [INFO] [file_reading.views.S100Map:32] Selected file is 102USA16LGBDC200408.H5
2021-11-30-14:02:15 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:02:15 [INFO] [root:53] file reading other case
2021-11-30-14:02:15 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A591B00>
2021-11-30-14:02:15 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A591B00> on colorbar
2021-11-30-14:02:15 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:02:50 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-14:02:50 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-14:02:50 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-14:02:50 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-14:02:50 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-14:02:50 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-14:02:50 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-14:02:50 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-14:02:50 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-14:02:50 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-14:02:50 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-14:02:50 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-14:02:50 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-14:02:50 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-14:02:50 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-14:02:50 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-14:02:50 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-14:02:52 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:02:53 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:03:14 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-11-30-14:03:14 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:03:14 [INFO] [root:53] file reading other case
2021-11-30-14:03:14 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018E1F630>
2021-11-30-14:03:14 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018E1F630> on colorbar
2021-11-30-14:03:14 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:03:14 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-14:03:22 [INFO] [file_reading.views.S100Map:32] Selected file is 102USA16LGBDC200408.H5
2021-11-30-14:03:22 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:03:22 [INFO] [root:53] file reading other case
2021-11-30-14:03:22 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A7B24E0>
2021-11-30-14:03:22 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A7B24E0> on colorbar
2021-11-30-14:03:22 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:03:28 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:03:28 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:03:36 [INFO] [file_reading.views.S100Map:32] Selected file is 102USA16LGBDC200408.H5
2021-11-30-14:03:36 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:03:36 [INFO] [root:53] file reading other case
2021-11-30-14:03:36 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001AA31780>
2021-11-30-14:03:36 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001AA31780> on colorbar
2021-11-30-14:03:36 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:03:42 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:03:42 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:03:49 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0054710N07080W.h5
2021-11-30-14:03:49 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:03:49 [INFO] [root:53] file reading other case
2021-11-30-14:03:50 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A495940>
2021-11-30-14:03:50 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A495940> on colorbar
2021-11-30-14:03:50 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:04:40 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-14:04:40 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-14:04:40 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-14:04:40 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-14:04:40 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-14:04:40 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-14:04:40 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-14:04:40 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-14:04:40 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-14:04:40 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-14:04:40 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-14:04:40 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-14:04:40 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-14:04:40 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-14:04:40 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-14:04:40 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-14:04:40 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-14:04:41 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:04:41 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:04:48 [INFO] [file_reading.views.S100Map:32] Selected file is 102USA16LGBDC200408.H5
2021-11-30-14:04:48 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:04:48 [INFO] [root:53] file reading other case
2021-11-30-14:04:49 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000194DFA20>
2021-11-30-14:04:49 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x00000000194DFA20> on colorbar
2021-11-30-14:04:49 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-14:04:49 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-14:05:01 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-11-30-14:05:01 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:05:01 [INFO] [root:53] file reading other case
2021-11-30-14:05:01 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018D0DF28>
2021-11-30-14:05:01 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018D0DF28> on colorbar
2021-11-30-14:05:01 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-14:05:07 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-14:05:07 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-14:05:15 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0054710N07080W.h5
2021-11-30-14:05:15 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-14:05:15 [INFO] [root:53] file reading other case
2021-11-30-14:05:15 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018CBCF60>
2021-11-30-14:05:15 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018CBCF60> on colorbar
2021-11-30-14:05:15 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-16:17:10 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:17:10 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:17:10 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:17:10 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:17:10 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:17:10 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:17:10 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:17:10 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:17:10 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:17:10 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:17:10 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:17:10 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:17:10 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:17:10 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:17:10 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:17:10 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:17:11 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:17:18 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:17:18 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:17:28 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-11-30-16:17:28 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-16:17:28 [INFO] [root:53] file reading other case
2021-11-30-16:17:29 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018FF1EB8>
2021-11-30-16:17:29 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018FF1EB8> on colorbar
2021-11-30-16:17:29 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:17:29 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-16:21:54 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:21:54 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:21:54 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:21:54 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:21:54 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:21:54 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:21:54 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:21:54 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:21:54 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:21:54 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:21:54 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:21:54 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:21:54 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:21:54 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:21:54 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:21:55 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:21:55 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:21:58 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:21:58 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:22:07 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-11-30-16:22:07 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-16:22:07 [INFO] [root:53] file reading other case
2021-11-30-16:22:07 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018D47208>
2021-11-30-16:22:07 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018D47208> on colorbar
2021-11-30-16:22:07 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:22:07 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-16:23:34 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:23:34 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:23:34 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:23:34 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:23:34 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:23:34 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:23:34 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:23:34 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:23:34 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:23:34 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:23:34 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:23:34 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:23:34 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:23:34 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:23:34 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:23:35 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:23:35 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:23:36 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:23:36 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:23:46 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-11-30-16:23:46 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-16:23:46 [INFO] [root:53] file reading other case
2021-11-30-16:23:47 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A3B7B00>
2021-11-30-16:23:47 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000001A3B7B00> on colorbar
2021-11-30-16:23:47 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:23:47 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-16:24:30 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:24:30 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:24:30 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:24:30 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:24:30 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:24:30 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:24:30 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:24:30 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:24:30 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:24:30 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:24:30 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:24:30 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:24:30 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:24:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:24:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:24:31 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:24:31 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:24:34 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:24:34 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:24:45 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-11-30-16:24:45 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-16:24:45 [INFO] [root:53] file reading other case
2021-11-30-16:24:45 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018DB7B38>
2021-11-30-16:24:45 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000018DB7B38> on colorbar
2021-11-30-16:24:45 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-11-30-16:24:45 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-11-30-16:27:24 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:27:24 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:27:24 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:27:24 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:27:24 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:27:24 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:27:24 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:27:24 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:27:24 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:27:24 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:27:24 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:27:24 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:27:24 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:27:24 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:27:24 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:27:24 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:27:25 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:27:28 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:27:28 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:27:35 [INFO] [file_reading.views.S100READINGFILE:53] Requested user is AnonymousUser
2021-11-30-16:27:35 [INFO] [file_reading.views.S100READINGFILE:55] Admin role id is 1
2021-11-30-16:27:41 [INFO] [file_reading.views.S100READINGFILE:53] Requested user is AnonymousUser
2021-11-30-16:27:41 [INFO] [file_reading.views.S100READINGFILE:55] Admin role id is 1
2021-11-30-16:28:18 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:28:18 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:28:18 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:28:18 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:28:19 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:28:19 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:28:19 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:28:19 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:28:19 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:28:19 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:28:19 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:28:19 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:28:19 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:28:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:28:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:28:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:28:19 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:28:23 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:28:23 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:28:31 [INFO] [file_reading.views.S100READINGFILE:53] Requested user is AnonymousUser
2021-11-30-16:28:31 [INFO] [file_reading.views.S100READINGFILE:55] Admin role id is 1
2021-11-30-16:29:38 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:29:38 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:29:49 [INFO] [file_reading.views.S100READINGFILE:53] Requested user is AnonymousUser
2021-11-30-16:29:49 [INFO] [file_reading.views.S100READINGFILE:55] Admin role id is 1
2021-11-30-16:30:20 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:30:20 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:30:20 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:30:20 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:30:20 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:30:20 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:30:20 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:30:20 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:30:20 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:30:20 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:30:20 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:30:20 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:30:20 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:30:20 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:30:20 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:30:21 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:30:21 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:30:22 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:30:22 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:30:35 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:30:36 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:30:44 [INFO] [file_reading.views.S100READINGFILE:53] Requested user is AnonymousUser
2021-11-30-16:30:44 [INFO] [file_reading.views.S100READINGFILE:55] Admin role id is 1
2021-11-30-16:32:19 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:32:19 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:32:19 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:32:19 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:32:19 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:32:19 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:32:19 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:32:19 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:32:19 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:32:19 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:32:19 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:32:19 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:32:19 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:32:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:32:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:32:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:32:19 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:32:42 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:32:42 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:32:42 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:32:42 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:32:42 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:32:42 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:32:42 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:32:42 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:32:42 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:32:42 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:32:42 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:32:42 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:32:42 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:32:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:32:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:32:43 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:32:43 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:32:47 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:32:47 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:53] Requested user is AnonymousUser
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:55] Admin role id is 1
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:65] Selected file is 102CA0064700N07078W.h5
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:67] filename is 102CA0064700N07078W.h5
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:69] Status of selected Header of file is true
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:71] Status of selected Metadata of fie is false
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:77] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-16:32:55 [INFO] [root:89] file reading other case
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:92] firstkey of file is  BathymetryCoverage
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:94] secondkey of file is  BathymetryCoverage.01
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:96] thirdkey of file is  Group_001
2021-11-30-16:32:55 [INFO] [file_reading.views.S100READINGFILE:98] Fourthkey of file is values
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]'}
2021-11-30-16:32:56 [DEBUG] [h5py._conv:77] Creating converter from 3 to 5
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']"}
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]'}
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']"}
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]'}
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']"}
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]'}
2021-11-30-16:32:56 [INFO] [file_reading.utils.utils:73] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]'}
2021-11-30-16:32:57 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/file-reading/102
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100READINGFILE.py", line 110, in create
    return HttpResponse(json.dumps(headerdataset), status=status.HTTP_201_CREATED)
  File "C:\Program Files\Python37\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\Python37\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\Python37\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\Python37\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type HttpResponse is not JSON serializable
2021-11-30-16:57:38 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:57:38 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:57:38 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:57:38 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:57:38 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:57:38 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:57:38 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:57:38 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:57:38 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:57:38 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:57:38 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:57:38 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:57:38 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:57:38 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:57:38 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:57:39 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:57:39 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:57:43 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:57:43 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-16:57:51 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/Log
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100LOGFILE.py", line 38, in list
    logfile = open(config.STORAGE+'log.txt', 'w')
FileNotFoundError: [Errno 2] No such file or directory: 'C:/Users/mndv8023/Documents/Manasa/2021/November/Newfolder/log.txt'
2021-11-30-16:59:45 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:59:45 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:59:45 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-16:59:45 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-16:59:46 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:59:46 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-16:59:46 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:59:46 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-16:59:46 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-16:59:46 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-16:59:46 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-16:59:46 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-16:59:46 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-16:59:46 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-16:59:46 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-16:59:46 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-16:59:46 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-16:59:50 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-16:59:50 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-17:03:32 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:03:32 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:03:32 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:03:32 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:03:33 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:03:33 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:03:33 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:03:33 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-17:03:33 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-17:03:33 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-17:03:33 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-17:03:33 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:03:33 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-17:03:33 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-17:03:33 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-17:03:33 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-17:03:33 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-17:03:36 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-17:03:36 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-17:11:59 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:11:59 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:11:59 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:11:59 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:11:59 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:11:59 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:11:59 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:11:59 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-17:11:59 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-17:11:59 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-17:11:59 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-17:11:59 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:11:59 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-17:12:00 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-17:12:00 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-17:12:00 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-17:12:00 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-17:12:03 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-17:12:03 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-17:15:11 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:15:11 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:15:11 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:15:11 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:15:11 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:15:11 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:15:11 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:15:11 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-17:15:11 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-17:15:11 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-17:15:11 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-17:15:11 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:15:11 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-17:15:12 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-17:15:12 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-17:15:12 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-17:15:12 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-17:15:20 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-17:15:20 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-17:17:41 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:17:41 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:17:41 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:17:41 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:17:42 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:17:42 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:17:42 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:17:42 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-17:17:42 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-17:17:42 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-17:17:42 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-17:17:42 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:17:42 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-17:17:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-17:17:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-17:17:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-17:17:42 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-17:17:46 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-17:17:46 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-17:19:03 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:19:03 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:19:03 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:19:03 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:19:03 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:19:03 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:19:03 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:19:03 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-17:19:03 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-17:19:03 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-17:19:03 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-17:19:03 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:19:03 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-17:19:03 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-17:19:03 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-17:19:04 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-17:19:04 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-17:19:08 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-17:19:08 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-17:58:15 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:58:15 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:58:15 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:58:15 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:58:15 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:58:15 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:58:15 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:58:15 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-17:58:15 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-17:58:15 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-17:58:15 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-17:58:15 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:58:15 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-17:58:16 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-17:58:16 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-17:58:16 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-17:58:16 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-17:58:42 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-17:58:42 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:54] Selected file is 102CA0064700N07078W.h5
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:56] filename is 102CA0064700N07078W.h5
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:58] Status of selected Header of file is false
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:60] Status of selected Metadata of fie is false
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:66] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-17:58:50 [INFO] [root:78] file reading other case
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:81] firstkey of file is  BathymetryCoverage
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:83] secondkey of file is  BathymetryCoverage.01
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:85] thirdkey of file is  Group_001
2021-11-30-17:58:50 [INFO] [file_reading.views.S100READINGFILE:87] Fourthkey of file is values
2021-11-30-17:59:55 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:59:55 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:59:55 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-17:59:55 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-17:59:56 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:59:56 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-17:59:56 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:59:56 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-17:59:56 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-17:59:56 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-17:59:56 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-17:59:56 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-17:59:56 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-17:59:56 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-17:59:56 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-17:59:56 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-17:59:57 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-17:59:59 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-17:59:59 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:52] Admin role id is 1
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:54] Selected file is 102CA0064700N07078W.h5
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:58] filename is 102CA0064700N07078W.h5
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:60] Status of selected Header of file is false
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:62] Status of selected Metadata of fie is false
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:66] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:69] selected file name is 102CA0064700N07078W.h5
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:71] Selected file path for storage is C:\Users\mndv8023\Documents\Manasa\2021\Oct\Savetest\102CA0064700N07078W.h5
2021-11-30-18:00:07 [INFO] [file_reading.views.S100SAVEFILE:72] complete path is C:\Users\mndv8023\Documents\Manasa\2021\Oct\Savetest\102CA0064700N07078W.h5
2021-11-30-18:00:07 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/savecontent/102
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100SAVEFILE.py", line 73, in create
    f1 = h5py.File(completeName, 'w')
  File "C:\Program Files\Python37\lib\site-packages\h5py\_hl\files.py", line 427, in __init__
    swmr=swmr)
  File "C:\Program Files\Python37\lib\site-packages\h5py\_hl\files.py", line 196, in make_fid
    fid = h5f.create(name, h5f.ACC_TRUNC, fapl=fapl, fcpl=fcpl)
  File "h5py\_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py\_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "h5py\h5f.pyx", line 116, in h5py.h5f.create
OSError: Unable to create file (unable to open file: name = 'C:\Users\mndv8023\Documents\Manasa\2021\Oct\Savetest\102CA0064700N07078W.h5', errno = 2, error message = 'No such file or directory', flags = 13, o_flags = 302)
2021-11-30-18:01:59 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:01:59 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:01:59 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:01:59 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:01:59 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:01:59 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:01:59 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:01:59 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:01:59 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:01:59 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:01:59 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:02:00 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:02:00 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:02:00 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:02:00 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:02:00 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:02:00 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:02:03 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:02:03 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:52] Admin role id is 1
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:54] Selected file is 102CA0064700N07078W.h5
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:58] filename is 102CA0064700N07078W.h5
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:60] Status of selected Header of file is false
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:62] Status of selected Metadata of fie is false
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:66] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:69] selected file name is 102CA0064700N07078W.h5
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:71] Selected file path for storage is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:72] complete path is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:79] file size of selected file is 1880825
2021-11-30-18:02:11 [INFO] [file_reading.views.S100SAVEFILE:82] Dictionary of file to be inserted is {'file_name': '102CA0064700N07078W.h5', 'file_path': 'C:\\Users\\shnt6940\\Documents\\Shankar\\Noaa_Workspace\\S100Validation\\tmp', 'file_size': 1880825, 'uploaded_by': None, 'agency_name': 'Privacyuser', 'updated_date': datetime.datetime(2021, 11, 30, 18, 2, 11, 300293), 'description': 'Inserting file info'}
2021-11-30-18:03:35 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:03:35 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:03:35 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:03:35 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:03:35 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:03:35 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:03:35 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:03:35 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:03:35 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:03:35 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:03:35 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:03:36 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:03:36 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:03:36 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:03:36 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:03:36 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:03:36 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:03:39 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:03:39 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:52] Admin role id is 1
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:54] Selected file is 102CA0064700N07078W.h5
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:58] filename is 102CA0064700N07078W.h5
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:60] Status of selected Header of file is false
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:62] Status of selected Metadata of fie is false
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:66] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:69] selected file name is 102CA0064700N07078W.h5
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:71] Selected file path for storage is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:72] complete path is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:79] file size of selected file is 1880825
2021-11-30-18:03:47 [INFO] [file_reading.views.S100SAVEFILE:82] Dictionary of file to be inserted is {'file_name': '102CA0064700N07078W.h5', 'file_path': 'C:\\Users\\shnt6940\\Documents\\Shankar\\Noaa_Workspace\\S100Validation\\tmp', 'file_size': 1880825, 'uploaded_by': None, 'agency_name': 'Privacyuser', 'updated_date': datetime.datetime(2021, 11, 30, 18, 3, 47, 920493), 'description': 'Inserting file info'}
2021-11-30-18:04:37 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:04:37 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:04:37 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:04:37 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:04:37 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:04:37 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:04:37 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:04:37 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:04:37 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:04:37 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:04:37 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:04:37 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:04:37 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:04:37 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:04:37 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:04:37 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:04:37 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:04:41 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:04:41 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:52] Admin role id is 1
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:54] Selected file is 102CA0064700N07078W.h5
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:58] filename is 102CA0064700N07078W.h5
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:60] Status of selected Header of file is false
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:62] Status of selected Metadata of fie is false
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:66] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:69] selected file name is 102CA0064700N07078W.h5
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:71] Selected file path for storage is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:72] complete path is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:79] file size of selected file is 1880825
2021-11-30-18:04:50 [INFO] [file_reading.views.S100SAVEFILE:82] Dictionary of file to be inserted is {'file_name': '102CA0064700N07078W.h5', 'file_path': 'C:\\Users\\shnt6940\\Documents\\Shankar\\Noaa_Workspace\\S100Validation\\tmp', 'file_size': 1880825, 'uploaded_by': None, 'agency_name': 'Privacyuser', 'updated_date': datetime.datetime(2021, 11, 30, 18, 4, 50, 429652), 'description': 'Inserting file info'}
2021-11-30-18:05:27 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:05:27 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:05:27 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:05:27 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:05:27 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:05:27 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:05:27 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:05:27 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:05:27 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:05:27 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:05:27 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:05:27 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:05:27 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:05:28 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:05:28 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:05:28 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:05:28 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:05:32 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:05:32 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:52] Admin role id is 1
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:54] Selected file is 102CA0064700N07078W.h5
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:58] filename is 102CA0064700N07078W.h5
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:60] Status of selected Header of file is false
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:62] Status of selected Metadata of fie is false
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:66] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:69] selected file name is 102CA0064700N07078W.h5
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:71] Selected file path for storage is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:72] complete path is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:79] file size of selected file is 1880825
2021-11-30-18:05:41 [INFO] [file_reading.views.S100SAVEFILE:82] Dictionary of file to be inserted is {'file_name': '102CA0064700N07078W.h5', 'file_path': 'C:\\Users\\shnt6940\\Documents\\Shankar\\Noaa_Workspace\\S100Validation\\tmp', 'file_size': 1880825, 'uploaded_by': None, 'agency_name': 'Privacyuser', 'updated_date': datetime.datetime(2021, 11, 30, 18, 5, 41, 851020), 'description': 'Inserting file info'}
2021-11-30-18:06:09 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:06:09 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:06:09 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:06:09 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:06:09 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:06:09 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:06:09 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:06:09 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:06:09 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:06:09 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:06:09 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:06:09 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:06:09 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:06:09 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:06:09 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:06:09 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:06:10 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:06:11 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:06:11 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:52] Admin role id is 1
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:54] Selected file is 102CA0064700N07078W.h5
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:58] filename is 102CA0064700N07078W.h5
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:60] Status of selected Header of file is false
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:62] Status of selected Metadata of fie is false
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:66] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:69] selected file name is 102CA0064700N07078W.h5
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:71] Selected file path for storage is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:72] complete path is C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\tmp\102CA0064700N07078W.h5
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:79] file size of selected file is 1880825
2021-11-30-18:06:19 [INFO] [file_reading.views.S100SAVEFILE:82] Dictionary of file to be inserted is {'file_name': '102CA0064700N07078W.h5', 'file_path': 'C:\\Users\\shnt6940\\Documents\\Shankar\\Noaa_Workspace\\S100Validation\\tmp', 'file_size': 1880825, 'uploaded_by': None, 'agency_name': 'Privacyuser', 'updated_date': datetime.datetime(2021, 11, 30, 18, 6, 19, 28313), 'description': 'Inserting file info'}
2021-11-30-18:09:29 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:09:29 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:11:04 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:11:04 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:11:04 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:11:04 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:11:04 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:11:04 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:11:04 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:11:04 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:11:04 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:11:04 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:11:04 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:11:04 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:11:04 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:11:05 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:11:05 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:11:05 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:11:05 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:11:08 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:11:08 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:11:41 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:11:41 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:17:09 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:17:09 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:17:09 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:17:09 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:17:10 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:17:10 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:17:10 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:17:10 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:17:10 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:17:10 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:17:10 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:17:10 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:17:10 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:17:10 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:17:10 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:17:10 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:17:10 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:17:12 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:17:12 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:17:20 [INFO] [file_reading.views.S100LOGFILE:64] exiting from log reading file
2021-11-30-18:18:45 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:18:45 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:18:45 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:18:45 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:18:45 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:18:45 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:18:45 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:18:45 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:18:45 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:18:45 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:18:45 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:18:45 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:18:45 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:18:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:18:45 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:18:46 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:18:46 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:18:47 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:18:47 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:18:58 [INFO] [file_reading.views.S100LOGFILE:64] exiting from log reading file
2021-11-30-18:20:13 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:20:13 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:20:13 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:20:13 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:20:13 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:20:13 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:20:13 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:20:13 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:20:13 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:20:13 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:20:13 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:20:13 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:20:13 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:20:13 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:20:13 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:20:13 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:20:14 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:20:17 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:20:17 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:20:25 [INFO] [file_reading.views.S100LOGFILE:64] exiting from log reading file
2021-11-30-18:21:41 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:21:41 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:21:41 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:21:41 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:21:42 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:21:42 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:21:42 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:21:42 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:21:42 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:21:42 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:21:42 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:21:42 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:21:42 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:21:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:21:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:21:42 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:21:42 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:21:44 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:21:45 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:21:53 [INFO] [file_reading.views.S100LOGFILE:64] exiting from log reading file
2021-11-30-18:21:53 [WARNING] [django.request:230] Not Found: /S100Verification/Validation/Log
2021-11-30-18:22:28 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:22:28 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:22:28 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:22:28 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:22:29 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:22:29 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:22:29 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:22:29 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:22:29 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:22:29 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:22:29 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:22:29 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:22:29 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:22:29 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:22:29 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:22:29 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:22:30 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:22:31 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:22:31 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:22:38 [INFO] [file_reading.views.S100LOGFILE:64] exiting from log reading file
2021-11-30-18:23:46 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:23:46 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:23:46 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-11-30-18:23:46 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-11-30-18:23:46 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:23:46 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-11-30-18:23:46 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:23:46 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-11-30-18:23:46 [DEBUG] [matplotlib:1481] interactive is False
2021-11-30-18:23:46 [DEBUG] [matplotlib:1482] platform is win32
2021-11-30-18:23:46 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-11-30-18:23:46 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-11-30-18:23:46 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-11-30-18:23:46 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-11-30-18:23:46 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-11-30-18:23:46 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-11-30-18:23:47 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-11-30-18:23:48 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-11-30-18:23:48 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-11-30-18:23:55 [INFO] [file_reading.views.S100LOGFILE:65] exiting from log reading file
2021-12-01-11:03:56 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-11:03:56 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-11:03:56 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-11:03:56 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-11:03:56 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-11:03:56 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-11:03:56 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-11:03:56 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-11:03:56 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-11:03:56 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-11:03:56 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-11:03:56 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-11:03:56 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-11:03:57 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-11:03:57 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-11:03:57 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-11:03:57 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-11:04:06 [ERROR] [django.request:230] Internal Server Error: /Login
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100READINGFILE.py", line 34, in Login
    return render(request, 'Login.html')
  File "c:\users\shnt6940\django\django\shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "c:\users\shnt6940\django\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "c:\users\shnt6940\django\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
  File "c:\users\shnt6940\django\django\template\backends\django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "c:\users\shnt6940\django\django\template\engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "c:\users\shnt6940\django\django\template\engine.py", line 125, in find_template
    template = loader.get_template(name, skip=skip)
  File "c:\users\shnt6940\django\django\template\loaders\base.py", line 24, in get_template
    contents = self.get_contents(origin)
  File "c:\users\shnt6940\django\django\template\loaders\filesystem.py", line 24, in get_contents
    return fp.read()
  File "C:\Program Files\Python37\lib\codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa9 in position 4452: invalid start byte
2021-12-01-11:04:07 [WARNING] [django.request:230] Not Found: /favicon.ico
2021-12-01-11:04:35 [ERROR] [django.request:230] Internal Server Error: /Login
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100READINGFILE.py", line 34, in Login
    return render(request, 'Login.html')
  File "c:\users\shnt6940\django\django\shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "c:\users\shnt6940\django\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "c:\users\shnt6940\django\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
  File "c:\users\shnt6940\django\django\template\backends\django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "c:\users\shnt6940\django\django\template\engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "c:\users\shnt6940\django\django\template\engine.py", line 125, in find_template
    template = loader.get_template(name, skip=skip)
  File "c:\users\shnt6940\django\django\template\loaders\base.py", line 24, in get_template
    contents = self.get_contents(origin)
  File "c:\users\shnt6940\django\django\template\loaders\filesystem.py", line 24, in get_contents
    return fp.read()
  File "C:\Program Files\Python37\lib\codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa9 in position 4452: invalid start byte
2021-12-01-11:05:31 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-11:05:31 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-11:05:31 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-11:05:31 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-11:05:31 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-11:05:31 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-11:05:31 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-11:05:31 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-11:05:31 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-11:05:31 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-11:05:31 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-11:05:31 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-11:05:31 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-11:05:32 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-11:05:32 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-11:05:32 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-11:05:32 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-11:05:36 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:05:36 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:09:32 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-11:09:32 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-11:09:32 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-11:09:32 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-11:09:32 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-11:09:32 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-11:09:32 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-11:09:32 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-11:09:32 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-11:09:32 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-11:09:32 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-11:09:32 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-11:09:32 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-11:09:32 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-11:09:32 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-11:09:33 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-11:09:33 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-11:09:34 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:09:34 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:11:33 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:11:33 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:11:41 [WARNING] [django.request:230] Bad Request: /api-token-auth
2021-12-01-11:11:53 [WARNING] [django.request:230] Bad Request: /api-token-auth
2021-12-01-11:12:47 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:12:47 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:12:54 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-11:12:54 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-11:13:00 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:13:01 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:13:01 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:13:03 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:13:03 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-11:17:32 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:17:32 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:17:34 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:17:34 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:17:34 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:17:34 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:20:26 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:20:26 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:20:26 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:20:30 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:20:30 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:20:30 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:20:30 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:20:32 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:20:32 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:20:32 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:20:32 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:20:32 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:20:32 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-11:26:55 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:26:55 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:26:55 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:26:55 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:26:55 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:26:55 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-11:28:02 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:28:02 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:28:02 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:28:02 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:28:02 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:28:03 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-11:28:14 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:28:14 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:28:14 [WARNING] [django.request:230] Not Found: /js/popper.min.js
2021-12-01-11:28:14 [WARNING] [django.request:230] Not Found: /js/bootstrap.min.js
2021-12-01-11:28:14 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:28:14 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-11:44:51 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:44:51 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-11:46:47 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:46:47 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-11:47:34 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-11:47:35 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-13:00:37 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-13:00:37 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-13:01:03 [ERROR] [django.request:230] Internal Server Error: /S100Verification/Validation/signup
Traceback (most recent call last):
  File "c:\users\shnt6940\django\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
  File "c:\users\shnt6940\django\django\core\handlers\base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\shnt6940\django\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\viewsets.py", line 114, in view
    return self.dispatch(request, *args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 476, in raise_uncaught_exception
    raise exc
  File "C:\Program Files\Python37\lib\site-packages\rest_framework\views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\file_reading\views\S100SIGNUPFILE.py", line 45, in create
    dict2 = {'user_name': request.data.get('user_name'), 'first_name': request.data.get('first_name'), 'last_name': request.data.get('last_name'), 'email':request.data.get('email'), 'phoneno':int(request.data.get('phoneno')), 'description': (request.data.get('description').rstrip()), 'role_id' : '2'}
ValueError: invalid literal for int() with base 10: ''
2021-12-01-13:01:10 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-13:01:10 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-13:01:11 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-13:01:11 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')])]
2021-12-01-13:03:36 [INFO] [file_reading.views.S100SIGNUPFILE:53] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (2)>, <AgencyInfo: AgencyInfo object (4)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (6)>, <AgencyInfo: AgencyInfo object (7)>, <AgencyInfo: AgencyInfo object (8)>, <AgencyInfo: AgencyInfo object (9)>, <AgencyInfo: AgencyInfo object (10)>]>
2021-12-01-13:10:05 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-13:10:05 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Khanapur'), ('phoneno', 779963), ('contact_person', 'Prasad'), ('email', 'asdfsaf@gmal.com'), ('description', 'Dindi')])]
2021-12-01-13:10:14 [INFO] [validation.views.S100AGENCY:36] <QuerySet [<AgencyInfo: AgencyInfo object (1)>, <AgencyInfo: AgencyInfo object (5)>, <AgencyInfo: AgencyInfo object (4)>]>
2021-12-01-13:10:14 [INFO] [validation.views.S100AGENCY:39] Data of agency is [OrderedDict([('agency_name', 'IHO'), ('address', 'Hydrographic Organization'), ('phoneno', 999999), ('contact_person', 'tim'), ('email', 'tim@iho.com'), ('description', 'International Hydrographic Organization')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 888888), ('contact_person', 'kim'), ('email', 'kim@noaa.com'), ('description', 'National Oceanic and Atmospheric Administration')]), OrderedDict([('agency_name', 'undefined'), ('address', 'hell'), ('phoneno', 333333), ('contact_person', 'shana'), ('email', 'asdfsa@gmail.com'), ('description', 'hello')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 123456), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 98756412), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 12345), ('contact_person', 'mndv'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Iho'), ('phoneno', 78945612), ('contact_person', 'mndv'), ('email', 'mndv@gmail.com'), ('description', 'iho')]), OrderedDict([('agency_name', 'NOAA'), ('address', 'Noaa'), ('phoneno', 1234567890), ('contact_person', 'mndv8023'), ('email', 'manasa@gmail.com'), ('description', 'noaa')]), OrderedDict([('agency_name', 'IHO'), ('address', 'Khanapur'), ('phoneno', 779963), ('contact_person', 'Prasad'), ('email', 'asdfsaf@gmal.com'), ('description', 'Dindi')])]
2021-12-01-13:18:11 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-13:18:11 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-13:18:11 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-13:18:11 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-13:18:12 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-13:18:12 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-13:18:12 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-13:18:12 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-13:18:12 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-13:18:12 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-13:18:12 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-13:18:12 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-13:18:12 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-13:18:12 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-13:18:12 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-13:18:12 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-13:18:12 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-13:18:58 [WARNING] [django.request:230] Not Found: /S100Verification/Validation/changepassword
2021-12-01-14:41:38 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-14:41:38 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-14:41:38 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-14:41:38 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-14:41:38 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-14:41:38 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-14:41:38 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-14:41:38 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-14:41:38 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-14:41:38 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-14:41:38 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-14:41:38 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-14:41:38 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-14:41:38 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-14:41:38 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-14:41:38 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-14:41:39 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-14:44:08 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-14:44:08 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-14:44:08 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-14:44:08 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-14:44:08 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-14:44:08 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-14:44:08 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-14:44:08 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-14:44:08 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-14:44:08 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-14:44:08 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-14:44:08 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-14:44:08 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-14:44:08 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-14:44:08 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-14:44:08 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-14:44:08 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-14:45:03 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-14:45:03 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-14:45:03 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-14:45:03 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-14:45:03 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-14:45:03 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-14:45:03 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-14:45:03 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-14:45:03 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-14:45:03 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-14:45:03 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-14:45:03 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-14:45:03 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-14:45:03 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-14:45:03 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-14:45:03 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-14:45:03 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-15:05:03 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-15:05:03 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-15:05:03 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-15:05:03 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-15:05:03 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-15:05:03 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-15:05:03 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-15:05:03 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-15:05:03 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-15:05:03 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-15:05:03 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-15:05:03 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-15:05:03 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-15:05:03 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-15:05:03 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-15:05:04 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-15:05:04 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-15:07:58 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-15:07:58 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-15:07:58 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-15:07:58 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-15:07:58 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-15:07:58 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-15:07:58 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-15:07:58 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-15:07:58 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-15:07:58 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-15:07:58 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-15:07:58 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-15:07:58 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-15:07:58 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-15:07:58 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-15:07:58 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-15:07:58 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-16:09:18 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-16:09:18 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-16:10:37 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-16:20:18 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-16:20:18 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-16:20:18 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-16:20:18 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-16:20:18 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-16:20:18 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-16:20:18 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-16:20:18 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-16:20:18 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-16:20:18 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-16:20:18 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-16:20:18 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-16:20:18 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-16:20:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-16:20:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-16:20:19 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-16:20:19 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-16:20:22 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-16:20:22 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-16:20:23 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-16:21:12 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-16:21:12 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-16:21:12 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-16:23:13 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-16:23:13 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-16:23:13 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-16:23:35 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-16:23:35 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-16:23:35 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-16:25:55 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-16:25:55 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-16:25:55 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-16:27:54 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-16:27:54 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-16:27:54 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:11:48 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:11:48 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:11:48 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:12:15 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:12:15 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:12:16 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:15:42 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:15:42 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:15:42 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:15:54 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:15:54 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:15:55 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:17:46 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:17:46 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:17:46 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:20:48 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:20:48 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:20:48 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:24:15 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:24:15 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:24:15 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:26:56 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:26:56 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:26:57 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:27:47 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:27:47 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:27:47 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:28:32 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:28:32 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:28:33 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:30:04 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:30:04 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:30:04 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:32:34 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:32:34 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:32:34 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:33:08 [WARNING] [django.request:230] Bad Request: /S100Verification/Validation/S100map
2021-12-01-17:33:16 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-12-01-17:33:16 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-12-01-17:33:16 [INFO] [root:53] file reading other case
2021-12-01-17:33:17 [DEBUG] [matplotlib.colorbar:600] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000019008F28>
2021-12-01-17:33:17 [DEBUG] [matplotlib.colorbar:645] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000000019008F28> on colorbar
2021-12-01-17:33:17 [DEBUG] [matplotlib.colorbar:802] Setting pcolormesh
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1334] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1346] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-12-01-17:33:17 [DEBUG] [matplotlib.font_manager:1367] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Program Files\\Python37\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-12-01-17:41:41 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:41:41 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:41:41 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:47:03 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:47:03 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:47:03 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:52:39 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:52:39 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:52:39 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:53:11 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:53:11 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:53:11 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:53:44 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:53:50 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:53:50 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-17:53:50 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-17:54:23 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:54:56 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:55:28 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:56:00 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:56:32 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:57:04 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:57:36 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:58:08 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-17:58:21 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-17:58:21 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-17:58:21 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-17:58:21 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-17:58:21 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-17:58:21 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-17:58:21 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-17:58:21 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-17:58:21 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-17:58:21 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-17:58:21 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-17:58:22 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-17:58:22 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-17:58:22 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-17:58:22 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-17:58:22 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-17:58:22 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-18:18:51 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-18:18:51 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-18:18:51 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-18:18:51 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-18:18:51 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-18:18:51 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-18:18:51 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-18:18:51 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-18:18:51 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-18:18:51 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-18:18:51 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-18:18:51 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-18:18:51 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-18:18:51 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-18:18:51 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-18:18:51 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-18:18:52 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-18:18:54 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-18:18:55 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-18:18:55 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:19:27 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:19:59 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:20:31 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:20:55 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-18:20:56 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:20:56 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-18:21:25 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-18:21:26 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-18:21:26 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:21:59 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:22:31 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:23:03 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:23:35 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:24:07 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:24:39 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:25:11 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:25:43 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:26:04 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-18:26:04 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-18:26:04 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:26:39 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:27:01 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-18:27:01 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-18:27:01 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-18:27:01 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-18:27:01 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-18:27:01 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-18:27:01 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-18:27:01 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-18:27:01 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-18:27:01 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-18:27:01 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-18:27:01 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-18:27:01 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-18:27:01 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-18:27:01 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-18:27:01 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-18:27:01 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-18:27:08 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [{'name': 'S-101'}, {'name': 'S-102'}]>
2021-12-01-18:27:08 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')]), OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-18:27:08 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:27:45 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:28:18 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:28:51 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:29:05 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-18:29:05 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-18:29:05 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-01-18:29:05 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-01-18:29:05 [DEBUG] [matplotlib:241] (private) matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-18:29:05 [DEBUG] [matplotlib:241] matplotlib data path: C:\Program Files\Python37\lib\site-packages\matplotlib\mpl-data
2021-12-01-18:29:05 [DEBUG] [matplotlib:241] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-18:29:05 [DEBUG] [matplotlib:1480] matplotlib version 3.3.4
2021-12-01-18:29:05 [DEBUG] [matplotlib:1481] interactive is False
2021-12-01-18:29:05 [DEBUG] [matplotlib:1482] platform is win32
2021-12-01-18:29:05 [DEBUG] [matplotlib:1483] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.module_loading', 'copy', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.encoding', 'decimal', 'numbers', '_decimal', 'django.utils.functional', 'django.utils.ipv6', 'django.utils.translation', 'django.utils.autoreload', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.utils.inspect', 'django.utils.regex_helper', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.template.loader', 'django.template.backends.jinja2', 'jinja2', 'jinja2.bccache', 'pickle', '_compat_pickle', '_pickle', 'typing', 'typing.io', 'typing.re', 'jinja2.environment', 'markupsafe', 'markupsafe._speedups', 'jinja2.nodes', 'jinja2.utils', 'jinja2.compiler', 'jinja2.exceptions', 'jinja2.idtracking', 'jinja2.visitor', 'jinja2.optimizer', 'jinja2.defaults', 'jinja2.filters', 'jinja2.async_utils', 'jinja2.runtime', 'jinja2.tests', 'jinja2.lexer', 'ast', '_ast', 'jinja2._identifier', 'jinja2.parser', 'jinja2.loaders', 'django.forms.fields', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.functions.datetime', 'django.db.models.lookups', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.db.models.fields.json', 'django.db.models.fields.mixins', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.contrib.auth.signals', 'django.views.decorators', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.tz', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2.compat', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', '__future__', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.views.decorators.debug', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'django.conf.urls', 'django.views.defaults', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'coreapi', 'coreapi.auth', 'coreapi.utils', 'coreapi.exceptions', 'coreapi.compat', 'http.cookiejar', 'click', 'click.core', 'click.types', 'click._compat', 'click._winconsole', 'click.exceptions', 'click.utils', 'click.globals', 'click._unicodefun', 'click.formatting', 'click.parser', 'click.termui', 'click.decorators', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'urllib3._version', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'simplejson', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'coreapi.codecs', 'coreapi.codecs.base', 'itypes', 'coreapi.codecs.corejson', 'coreapi.document', 'coreschema', 'coreschema.schemas', 'coreschema.compat', 'coreschema.formats', 'coreschema.utils', 'coreschema.encodings', 'coreschema.encodings.html', 'coreapi.codecs.display', 'coreapi.codecs.download', 'coreapi.codecs.jsondata', 'coreapi.codecs.python', 'coreapi.codecs.text', 'coreapi.transports', 'coreapi.transports.base', 'coreapi.transports.http', 'uritemplate', 'uritemplate.api', 'uritemplate.orderedset', 'uritemplate.template', 'uritemplate.variable', 'coreapi.client', 'pygments', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.special', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.validators', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', 'h5py.defs', 'h5py._objects', 'gc', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
2021-12-01-18:29:05 [DEBUG] [matplotlib:241] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-01-18:29:05 [DEBUG] [matplotlib.font_manager:1436] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-01-18:29:06 [DEBUG] [matplotlib.pyplot:290] Loaded backend qt5agg version unknown.
2021-12-01-18:29:06 [DEBUG] [matplotlib.pyplot:290] Loaded backend Qt5Agg version unknown.
2021-12-01-18:29:06 [DEBUG] [matplotlib.pyplot:290] Loaded backend agg version unknown.
2021-12-01-18:29:06 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-01-18:29:14 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-18:29:14 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-18:29:14 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:29:50 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:30:22 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:30:54 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:31:26 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:31:58 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:32:30 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:33:01 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:33:33 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:34:05 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:34:37 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:35:10 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:35:42 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:36:14 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:36:46 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:37:18 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:37:51 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:38:23 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:38:55 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:39:27 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:39:59 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:40:31 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:41:03 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:41:35 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:42:07 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:42:39 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:43:11 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:43:43 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:44:15 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:44:47 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:46:02 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:46:02 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-01-18:46:02 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-01-18:46:40 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:47:14 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:48:16 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:49:17 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:50:18 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:50:51 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:51:38 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-01-18:52:39 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:01:02 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-11:01:02 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-11:01:02 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-11:01:02 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-11:01:03 [DEBUG] [matplotlib:224] matplotlib data path: C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\verfi_validation_env\lib\site-packages\matplotlib\mpl-data
2021-12-02-11:01:03 [DEBUG] [matplotlib:224] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-11:01:03 [DEBUG] [matplotlib:1394] matplotlib version 3.4.2
2021-12-02-11:01:03 [DEBUG] [matplotlib:1395] interactive is False
2021-12-02-11:01:03 [DEBUG] [matplotlib:1396] platform is win32
2021-12-02-11:01:03 [DEBUG] [matplotlib:1397] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'typing', 'typing.io', 'typing.re', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.functional', 'copy', 'django.utils.module_loading', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.utils.inspect', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.utils.connection', 'django.core.cache.backends.filebased', 'glob', 'pickle', '_compat_pickle', '_pickle', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation', 'decimal', 'numbers', '_decimal', 'django.utils.autoreload', 'django.utils.regex_helper', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.utils.encoding', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.template.autoreload', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.loader', 'django.forms.fields', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.ipv6', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.fields.json', 'django.db.models.lookups', 'django.db.models.fields.mixins', 'django.db.models.functions.datetime', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.views.decorators', 'django.views.decorators.debug', 'django.contrib.auth.signals', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.decorators.common', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'django.contrib.admin.views.main', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'django.core.cache.backends.locmem', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.validators', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_22', 'h5py.defs', 'h5py._objects', 'gc', 'h5py.h5py_warnings', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImageSequence', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', 'matplotlib.units']
2021-12-02-11:01:04 [DEBUG] [matplotlib:224] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-11:01:04 [DEBUG] [matplotlib.font_manager:1439] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-02-11:01:05 [DEBUG] [matplotlib.pyplot:291] Loaded backend tkagg version unknown.
2021-12-02-11:01:05 [DEBUG] [matplotlib.pyplot:291] Loaded backend TkAgg version unknown.
2021-12-02-11:01:05 [DEBUG] [matplotlib.pyplot:291] Loaded backend agg version unknown.
2021-12-02-11:01:06 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-02-11:01:13 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:01:14 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:01:14 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:01:14 [WARNING] [django.request:230] Not Found: /favicon.ico
2021-12-02-11:01:47 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:02:20 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:02:39 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:02:39 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:02:39 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:03:12 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:03:44 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:04:17 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:04:49 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:04:49 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:04:49 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:05:20 [INFO] [file_reading.views.S100SAVEFILE:50] Admin role id is 1
2021-12-02-11:05:20 [INFO] [file_reading.views.S100SAVEFILE:52] Selected file is 102CA0064700N07078W.h5
2021-12-02-11:05:21 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:05:52 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:06:26 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:06:46 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-12-02-11:06:46 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-12-02-11:06:46 [INFO] [root:53] file reading other case
2021-12-02-11:06:47 [DEBUG] [matplotlib.colorbar:620] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000000A4E7630>
2021-12-02-11:06:47 [DEBUG] [matplotlib.colorbar:665] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000000A4E7630> on colorbar
2021-12-02-11:06:47 [DEBUG] [matplotlib.colorbar:794] Setting pcolormesh
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1329] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-11:06:47 [DEBUG] [matplotlib.font_manager:1368] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\shnt6940\\Documents\\Shankar\\Noaa_Workspace\\S100Validation\\verfi_validation_env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-12-02-11:06:56 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:06:56 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:06:57 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:07:31 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
2021-12-02-11:07:34 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:07:34 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:09:51 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:09:51 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:10:20 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:10:20 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:10:37 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:10:37 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:10:57 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:10:57 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:11:13 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:11:13 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-11:11:34 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-11:11:34 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:07:04 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:07:04 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:07:04 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:07:04 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:07:04 [DEBUG] [matplotlib:224] matplotlib data path: C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\verfi_validation_env\lib\site-packages\matplotlib\mpl-data
2021-12-02-12:07:04 [DEBUG] [matplotlib:224] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:07:04 [DEBUG] [matplotlib:1394] matplotlib version 3.4.2
2021-12-02-12:07:04 [DEBUG] [matplotlib:1395] interactive is False
2021-12-02-12:07:04 [DEBUG] [matplotlib:1396] platform is win32
2021-12-02-12:07:04 [DEBUG] [matplotlib:1397] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'typing', 'typing.io', 'typing.re', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.functional', 'copy', 'django.utils.module_loading', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.utils.inspect', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.utils.connection', 'django.core.cache.backends.filebased', 'glob', 'pickle', '_compat_pickle', '_pickle', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation', 'decimal', 'numbers', '_decimal', 'django.utils.autoreload', 'django.utils.regex_helper', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.utils.encoding', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.template.autoreload', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.loader', 'django.forms.fields', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.ipv6', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.fields.json', 'django.db.models.lookups', 'django.db.models.fields.mixins', 'django.db.models.functions.datetime', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.views.decorators', 'django.views.decorators.debug', 'django.contrib.auth.signals', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.decorators.common', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'django.contrib.admin.views.main', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'django.core.cache.backends.locmem', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.validators', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_22', 'h5py.defs', 'h5py._objects', 'gc', 'h5py.h5py_warnings', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImageSequence', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', 'matplotlib.units']
2021-12-02-12:07:04 [DEBUG] [matplotlib:224] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:07:04 [DEBUG] [matplotlib.font_manager:1439] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-02-12:07:05 [DEBUG] [matplotlib.pyplot:291] Loaded backend tkagg version unknown.
2021-12-02-12:07:05 [DEBUG] [matplotlib.pyplot:291] Loaded backend TkAgg version unknown.
2021-12-02-12:07:05 [DEBUG] [matplotlib.pyplot:291] Loaded backend agg version unknown.
2021-12-02-12:07:05 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-02-12:07:19 [WARNING] [django.request:230] Not Found: /login
2021-12-02-12:07:55 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:07:55 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:09:39 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:09:39 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:09:39 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:09:39 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:09:39 [DEBUG] [matplotlib:224] matplotlib data path: C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\verfi_validation_env\lib\site-packages\matplotlib\mpl-data
2021-12-02-12:09:39 [DEBUG] [matplotlib:224] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:09:39 [DEBUG] [matplotlib:1394] matplotlib version 3.4.2
2021-12-02-12:09:39 [DEBUG] [matplotlib:1395] interactive is False
2021-12-02-12:09:39 [DEBUG] [matplotlib:1396] platform is win32
2021-12-02-12:09:39 [DEBUG] [matplotlib:1397] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'typing', 'typing.io', 'typing.re', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.functional', 'copy', 'django.utils.module_loading', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.utils.inspect', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.utils.connection', 'django.core.cache.backends.filebased', 'glob', 'pickle', '_compat_pickle', '_pickle', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation', 'decimal', 'numbers', '_decimal', 'django.utils.autoreload', 'django.utils.regex_helper', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.utils.encoding', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.template.autoreload', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.loader', 'django.forms.fields', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.ipv6', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.fields.json', 'django.db.models.lookups', 'django.db.models.fields.mixins', 'django.db.models.functions.datetime', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.views.decorators', 'django.views.decorators.debug', 'django.contrib.auth.signals', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.decorators.common', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'django.contrib.admin.views.main', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'django.core.cache.backends.locmem', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.validators', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_22', 'h5py.defs', 'h5py._objects', 'gc', 'h5py.h5py_warnings', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImageSequence', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', 'matplotlib.units']
2021-12-02-12:09:39 [DEBUG] [matplotlib:224] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:09:39 [DEBUG] [matplotlib.font_manager:1439] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-02-12:09:40 [DEBUG] [matplotlib.pyplot:291] Loaded backend tkagg version unknown.
2021-12-02-12:09:40 [DEBUG] [matplotlib.pyplot:291] Loaded backend TkAgg version unknown.
2021-12-02-12:09:40 [DEBUG] [matplotlib.pyplot:291] Loaded backend agg version unknown.
2021-12-02-12:09:40 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-02-12:09:46 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:09:46 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:10:59 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:10:59 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:12:03 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:12:03 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:12:14 [INFO] [file_reading.views.S100SAVEFILE:50] Admin role id is 1
2021-12-02-12:12:14 [INFO] [file_reading.views.S100SAVEFILE:52] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:12:52 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:12:52 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:13:29 [INFO] [file_reading.views.S100SAVEFILE:50] Admin role id is 1
2021-12-02-12:13:29 [INFO] [file_reading.views.S100SAVEFILE:52] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:14:48 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:14:48 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:14:48 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:14:48 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:14:48 [DEBUG] [matplotlib:224] matplotlib data path: C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\verfi_validation_env\lib\site-packages\matplotlib\mpl-data
2021-12-02-12:14:48 [DEBUG] [matplotlib:224] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:14:48 [DEBUG] [matplotlib:1394] matplotlib version 3.4.2
2021-12-02-12:14:48 [DEBUG] [matplotlib:1395] interactive is False
2021-12-02-12:14:48 [DEBUG] [matplotlib:1396] platform is win32
2021-12-02-12:14:48 [DEBUG] [matplotlib:1397] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'typing', 'typing.io', 'typing.re', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.functional', 'copy', 'django.utils.module_loading', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.utils.inspect', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.utils.connection', 'django.core.cache.backends.filebased', 'glob', 'pickle', '_compat_pickle', '_pickle', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation', 'decimal', 'numbers', '_decimal', 'django.utils.autoreload', 'django.utils.regex_helper', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.utils.encoding', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.template.autoreload', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.loader', 'django.forms.fields', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.ipv6', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.fields.json', 'django.db.models.lookups', 'django.db.models.fields.mixins', 'django.db.models.functions.datetime', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.views.decorators', 'django.views.decorators.debug', 'django.contrib.auth.signals', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.decorators.common', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'django.contrib.admin.views.main', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'django.core.cache.backends.locmem', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.validators', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_22', 'h5py.defs', 'h5py._objects', 'gc', 'h5py.h5py_warnings', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImageSequence', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', 'matplotlib.units']
2021-12-02-12:14:48 [DEBUG] [matplotlib:224] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:14:48 [DEBUG] [matplotlib.font_manager:1439] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-02-12:14:49 [DEBUG] [matplotlib.pyplot:291] Loaded backend tkagg version unknown.
2021-12-02-12:14:49 [DEBUG] [matplotlib.pyplot:291] Loaded backend TkAgg version unknown.
2021-12-02-12:14:49 [DEBUG] [matplotlib.pyplot:291] Loaded backend agg version unknown.
2021-12-02-12:14:49 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-02-12:14:54 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:14:54 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:15:03 [INFO] [file_reading.views.S100READINGFILE:53] Admin role id is 1
2021-12-02-12:15:03 [INFO] [file_reading.views.S100READINGFILE:55] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:15:56 [INFO] [file_reading.views.S100READINGFILE:53] Admin role id is 1
2021-12-02-12:15:56 [INFO] [file_reading.views.S100READINGFILE:55] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:16:44 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:16:44 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:17:29 [INFO] [file_reading.views.S100READINGFILE:53] Admin role id is 1
2021-12-02-12:17:29 [INFO] [file_reading.views.S100READINGFILE:55] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:19:21 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:19:21 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:19:21 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:19:21 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:19:21 [DEBUG] [matplotlib:224] matplotlib data path: C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\verfi_validation_env\lib\site-packages\matplotlib\mpl-data
2021-12-02-12:19:21 [DEBUG] [matplotlib:224] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:19:21 [DEBUG] [matplotlib:1394] matplotlib version 3.4.2
2021-12-02-12:19:21 [DEBUG] [matplotlib:1395] interactive is False
2021-12-02-12:19:21 [DEBUG] [matplotlib:1396] platform is win32
2021-12-02-12:19:21 [DEBUG] [matplotlib:1397] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'typing', 'typing.io', 'typing.re', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.functional', 'copy', 'django.utils.module_loading', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.utils.inspect', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.utils.connection', 'django.core.cache.backends.filebased', 'glob', 'pickle', '_compat_pickle', '_pickle', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation', 'decimal', 'numbers', '_decimal', 'django.utils.autoreload', 'django.utils.regex_helper', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.utils.encoding', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.template.autoreload', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.loader', 'django.forms.fields', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.ipv6', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.fields.json', 'django.db.models.lookups', 'django.db.models.fields.mixins', 'django.db.models.functions.datetime', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.views.decorators', 'django.views.decorators.debug', 'django.contrib.auth.signals', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.decorators.common', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'django.contrib.admin.views.main', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'django.core.cache.backends.locmem', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.validators', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_22', 'h5py.defs', 'h5py._objects', 'gc', 'h5py.h5py_warnings', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImageSequence', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', 'matplotlib.units']
2021-12-02-12:19:21 [DEBUG] [matplotlib:224] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:19:21 [DEBUG] [matplotlib.font_manager:1439] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-02-12:19:21 [DEBUG] [matplotlib.pyplot:291] Loaded backend tkagg version unknown.
2021-12-02-12:19:21 [DEBUG] [matplotlib.pyplot:291] Loaded backend TkAgg version unknown.
2021-12-02-12:19:21 [DEBUG] [matplotlib.pyplot:291] Loaded backend agg version unknown.
2021-12-02-12:19:22 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-02-12:19:38 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:19:38 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:19:49 [INFO] [file_reading.views.S100READINGFILE:53] Admin role id is 1
2021-12-02-12:19:49 [INFO] [file_reading.views.S100READINGFILE:55] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:24:42 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:24:42 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:24:51 [INFO] [file_reading.views.S100READINGFILE:53] Admin role id is 1
2021-12-02-12:24:51 [INFO] [file_reading.views.S100READINGFILE:55] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:26:55 [WARNING] [django.request:230] Bad Request: /api-token-auth
2021-12-02-12:27:02 [WARNING] [django.request:230] Bad Request: /api-token-auth
2021-12-02-12:27:10 [WARNING] [django.request:230] Bad Request: /api-token-auth
2021-12-02-12:27:48 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-02-12:28:34 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:28:34 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:28:34 [DEBUG] [h5py._conv:47] Creating converter from 7 to 5
2021-12-02-12:28:34 [DEBUG] [h5py._conv:47] Creating converter from 5 to 7
2021-12-02-12:28:34 [DEBUG] [matplotlib:224] matplotlib data path: C:\Users\shnt6940\Documents\Shankar\Noaa_Workspace\S100Validation\verfi_validation_env\lib\site-packages\matplotlib\mpl-data
2021-12-02-12:28:34 [DEBUG] [matplotlib:224] CONFIGDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:28:34 [DEBUG] [matplotlib:1394] matplotlib version 3.4.2
2021-12-02-12:28:34 [DEBUG] [matplotlib:1395] interactive is False
2021-12-02-12:28:34 [DEBUG] [matplotlib:1396] platform is win32
2021-12-02-12:28:34 [DEBUG] [matplotlib:1397] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'django', 'django.utils', 'django.utils.version', 'datetime', 'time', 'math', '_datetime', 'subprocess', 'signal', 'enum', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 're', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'msvcrt', '_winapi', 'distutils', 'distutils.version', 'django.core', 'django.core.management', 'pkgutil', 'weakref', 'argparse', 'gettext', 'locale', 'difflib', 'django.apps', 'django.apps.config', 'inspect', 'dis', 'opcode', '_opcode', 'collections.abc', 'django.core.exceptions', 'django.utils.hashable', 'django.utils.itercompat', 'django.utils.deprecation', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'logging', 'string', '_string', 'atexit', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'struct', '_struct', 'binascii', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'tempfile', 'shutil', 'fnmatch', 'posixpath', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'asgiref', 'asgiref.sync', 'concurrent.futures.thread', 'queue', '_queue', 'typing', 'typing.io', 'typing.re', 'asgiref.current_thread_executor', 'asgiref.local', 'django.utils.functional', 'copy', 'django.utils.module_loading', 'django.apps.registry', 'django.conf', 'pathlib', 'urllib', 'urllib.parse', 'django.conf.global_settings', 'django.core.management.base', 'django.core.checks', 'django.core.checks.messages', 'django.core.checks.registry', 'django.utils.inspect', 'django.core.checks.async_checks', 'django.core.checks.caches', 'django.core.cache', 'django.core.signals', 'django.dispatch', 'django.dispatch.dispatcher', 'django.core.cache.backends', 'django.core.cache.backends.base', 'django.utils.connection', 'django.core.cache.backends.filebased', 'glob', 'pickle', '_compat_pickle', '_pickle', 'django.core.files', 'django.core.files.base', 'django.core.files.utils', 'django.core.files.locks', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'django.core.files.move', 'django.core.checks.database', 'django.db', 'django.db.utils', 'django.core.checks.model_checks', 'django.core.checks.security', 'django.core.checks.security.base', 'django.core.checks.security.csrf', 'django.core.checks.security.sessions', 'django.core.checks.templates', 'django.core.checks.translation', 'django.utils.translation', 'decimal', 'numbers', '_decimal', 'django.utils.autoreload', 'django.utils.regex_helper', 'django.utils.translation.trans_real', 'django.conf.locale', 'django.utils.safestring', 'django.core.checks.urls', 'django.core.management.color', 'django.utils.termcolors', 'S100Ver_Val', 'S100Ver_Val.settings', 'django.urls', 'django.urls.base', 'django.urls.exceptions', 'django.http', 'django.http.cookie', 'http', 'http.cookies', 'django.http.request', 'cgi', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'html', 'html.entities', 'django.core.signing', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'django.utils.baseconv', 'django.utils.crypto', 'hmac', 'secrets', 'django.utils.encoding', 'django.core.files.uploadhandler', 'django.core.files.uploadedfile', 'django.core.files.temp', 'django.http.multipartparser', 'django.utils.datastructures', 'django.utils.http', 'unicodedata', 'django.http.response', 'mimetypes', 'http.client', 'django.core.serializers', 'django.core.serializers.base', 'django.db.models', 'django.db.models.signals', 'django.db.models.utils', 'django.db.models.aggregates', 'django.db.models.expressions', 'uuid', 'django.db.models.fields', 'django.forms', 'django.forms.boundfield', 'django.forms.utils', 'django.utils.timezone', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'django.utils.html', 'html.parser', '_markupbase', 'django.utils.text', 'gzip', 'django.forms.widgets', 'django.templatetags', 'django.templatetags.static', 'django.template', 'django.template.engine', 'django.template.base', 'django.template.context', 'django.utils.formats', 'django.utils.dateformat', 'django.utils.dates', 'django.utils.datetime_safe', 'django.utils.numberformat', 'django.template.exceptions', 'django.template.library', 'django.template.utils', 'django.template.autoreload', 'django.template.backends', 'django.template.backends.django', 'django.template.backends.base', 'django.utils._os', 'django.utils.topological_sort', 'django.forms.renderers', 'django.template.loader', 'django.forms.fields', 'django.core.validators', 'ipaddress', 'django.utils.deconstruct', 'django.utils.ipv6', 'django.utils.dateparse', 'django.utils.duration', 'django.forms.forms', 'django.forms.formsets', 'django.forms.models', 'django.db.models.constants', 'django.db.models.query_utils', 'django.utils.tree', 'django.db.models.functions', 'django.db.models.functions.comparison', 'django.db.models.fields.json', 'django.db.models.lookups', 'django.db.models.fields.mixins', 'django.db.models.functions.datetime', 'django.db.models.functions.math', 'django.db.models.functions.mixins', 'django.db.models.functions.text', 'django.db.models.functions.window', 'django.db.models.constraints', 'django.db.models.sql', 'django.db.models.sql.query', 'django.db.models.fields.related_lookups', 'django.db.models.sql.constants', 'django.db.models.sql.datastructures', 'django.db.models.sql.where', 'django.db.models.sql.subqueries', 'django.db.models.deletion', 'django.db.transaction', 'django.db.models.enums', 'django.db.models.fields.files', 'django.core.files.images', 'django.core.files.storage', 'django.db.models.fields.proxy', 'django.db.models.indexes', 'django.db.backends', 'django.db.backends.utils', 'django.db.models.manager', 'django.db.models.query', 'django.db.models.base', 'django.db.models.fields.related', 'django.db.models.fields.related_descriptors', 'django.db.models.fields.reverse_related', 'django.db.models.options', 'django.core.serializers.json', 'django.core.serializers.python', 'django.urls.resolvers', 'django.urls.converters', 'django.urls.utils', 'django.urls.conf', 'django.utils.log', 'logging.config', 'logging.handlers', 'socketserver', 'django.core.mail', 'django.core.mail.message', 'email.generator', 'email.headerregistry', 'email._header_value_parser', 'email.mime', 'email.mime.base', 'email.policy', 'email.contentmanager', 'email.mime.message', 'email.mime.nonmultipart', 'email.mime.multipart', 'email.mime.text', 'django.core.mail.utils', 'django.views', 'django.views.generic', 'django.views.generic.base', 'django.template.response', 'django.utils.decorators', 'django.views.generic.dates', 'django.views.generic.detail', 'django.views.generic.list', 'django.core.paginator', 'django.views.generic.edit', 'django.views.debug', 'django.template.defaultfilters', 'pprint', 'django.utils.timesince', 'django.templatetags.i18n', 'django.template.defaulttags', 'django.utils.lorem_ipsum', 'django.template.smartif', 'django.template.loader_tags', 'file_reading', 'file_reading.apps', 'validation', 'validation.apps', 'django.contrib', 'django.contrib.admin', 'django.contrib.admin.decorators', 'django.contrib.admin.filters', 'django.contrib.admin.options', 'django.contrib.messages', 'django.contrib.messages.api', 'django.contrib.messages.constants', 'django.contrib.messages.storage', 'django.contrib.admin.helpers', 'django.contrib.admin.utils', 'django.contrib.admin.widgets', 'django.contrib.admin.checks', 'django.contrib.admin.exceptions', 'django.contrib.admin.templatetags', 'django.contrib.admin.templatetags.admin_urls', 'django.contrib.auth', 'django.middleware', 'django.middleware.csrf', 'django.utils.cache', 'django.views.decorators', 'django.views.decorators.debug', 'django.contrib.auth.signals', 'django.views.decorators.csrf', 'django.contrib.admin.sites', 'django.contrib.admin.actions', 'django.contrib.admin.views', 'django.contrib.admin.views.autocomplete', 'django.views.decorators.cache', 'django.middleware.cache', 'django.views.decorators.common', 'django.views.i18n', 'django.contrib.admin.apps', 'django.contrib.auth.apps', 'django.contrib.auth.checks', 'django.contrib.auth.management', 'getpass', 'django.contrib.contenttypes', 'django.contrib.contenttypes.management', 'django.db.migrations', 'django.db.migrations.migration', 'django.db.migrations.operations', 'django.db.migrations.operations.fields', 'django.db.migrations.operations.base', 'django.db.migrations.operations.utils', 'django.db.migrations.operations.models', 'django.db.migrations.state', 'django.db.migrations.exceptions', 'django.db.migrations.operations.special', 'django.db.migrations.utils', 'django.contrib.contenttypes.apps', 'django.contrib.contenttypes.checks', 'django.contrib.sessions', 'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles', 'django.contrib.staticfiles.apps', 'django.contrib.staticfiles.checks', 'django.contrib.staticfiles.finders', 'django.contrib.staticfiles.utils', 'rest_framework', 'rest_framework.apps', 'rest_framework.authtoken', 'rest_framework.authtoken.apps', 'file_reading.models', 'validation.models', 'django.contrib.admin.models', 'django.contrib.contenttypes.models', 'django.contrib.auth.models', 'django.contrib.auth.base_user', 'django.contrib.auth.password_validation', 'django.contrib.auth.hashers', 'django.contrib.gis', 'django.contrib.gis.db', 'django.contrib.gis.db.backends', 'django.contrib.gis.db.backends.postgis', 'django.contrib.gis.db.backends.postgis.base', 'django.db.backends.base', 'django.db.backends.base.base', 'django.db.backends.base.validation', 'django.db.backends.signals', 'django.utils.asyncio', 'django.db.backends.postgresql', 'django.db.backends.postgresql.base', 'psycopg2', 'psycopg2.errors', 'psycopg2._psycopg', 'psycopg2.extensions', 'psycopg2._json', 'psycopg2._range', 'psycopg2.extras', 'psycopg2._ipaddress', 'django.db.backends.postgresql.client', 'django.db.backends.base.client', 'django.db.backends.postgresql.creation', 'psycopg2.errorcodes', 'django.db.backends.base.creation', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'django.db.backends.postgresql.features', 'django.db.backends.base.features', 'django.db.backends.postgresql.introspection', 'django.db.backends.base.introspection', 'django.db.backends.postgresql.operations', 'django.db.backends.base.operations', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'django.db.backends.postgresql.schema', 'django.db.backends.base.schema', 'django.db.backends.ddl_references', 'django.contrib.gis.db.backends.postgis.features', 'django.contrib.gis.db.backends.base', 'django.contrib.gis.db.backends.base.features', 'django.contrib.gis.db.models', 'django.contrib.gis.db.models.functions', 'django.contrib.gis.db.models.fields', 'django.contrib.gis.forms', 'django.contrib.gis.forms.fields', 'django.contrib.gis.gdal', 'django.contrib.gis.gdal.datasource', 'django.contrib.gis.gdal.base', 'django.contrib.gis.gdal.error', 'django.contrib.gis.ptr', 'django.contrib.gis.gdal.driver', 'django.contrib.gis.gdal.prototypes', 'django.contrib.gis.gdal.prototypes.ds', 'django.contrib.gis.gdal.envelope', 'django.contrib.gis.gdal.libgdal', 'ctypes.util', 'django.contrib.gis.gdal.prototypes.generation', 'django.contrib.gis.gdal.prototypes.errcheck', 'django.contrib.gis.gdal.prototypes.raster', 'django.contrib.gis.gdal.layer', 'django.contrib.gis.gdal.feature', 'django.contrib.gis.gdal.field', 'django.contrib.gis.gdal.geometries', 'django.contrib.gis.gdal.geomtype', 'django.contrib.gis.gdal.prototypes.geom', 'django.contrib.gis.gdal.prototypes.srs', 'django.contrib.gis.gdal.srs', 'django.contrib.gis.geometry', 'django.contrib.gis.gdal.raster', 'django.contrib.gis.gdal.raster.source', 'django.contrib.gis.gdal.raster.band', 'django.contrib.gis.gdal.raster.base', 'django.contrib.gis.shortcuts', 'zipfile', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'django.contrib.gis.gdal.raster.const', 'django.contrib.gis.geos', 'django.contrib.gis.geos.collections', 'django.contrib.gis.geos.prototypes', 'django.contrib.gis.geos.prototypes.coordseq', 'django.contrib.gis.geos.libgeos', 'django.contrib.gis.geos.prototypes.errcheck', 'django.contrib.gis.geos.error', 'django.contrib.gis.geos.prototypes.geom', 'django.contrib.gis.geos.prototypes.misc', 'django.contrib.gis.geos.prototypes.predicates', 'django.contrib.gis.geos.prototypes.topology', 'django.contrib.gis.geos.geometry', 'django.contrib.gis.geos.base', 'django.contrib.gis.geos.coordseq', 'django.contrib.gis.geos.mutable_list', 'django.contrib.gis.geos.prepared', 'django.contrib.gis.geos.prototypes.prepared', 'django.contrib.gis.geos.prototypes.io', 'django.contrib.gis.geos.linestring', 'django.contrib.gis.geos.point', 'django.contrib.gis.geos.polygon', 'django.contrib.gis.geos.factory', 'django.contrib.gis.geos.io', 'django.contrib.gis.forms.widgets', 'django.contrib.gis.db.models.proxy', 'django.contrib.gis.db.models.sql', 'django.contrib.gis.db.models.sql.conversion', 'django.contrib.gis.measure', 'django.contrib.gis.db.models.lookups', 'django.contrib.gis.db.models.aggregates', 'django.contrib.gis.db.backends.postgis.introspection', 'django.contrib.gis.db.backends.postgis.operations', 'django.contrib.gis.db.backends.base.operations', 'django.contrib.gis.db.backends.utils', 'django.contrib.gis.db.backends.postgis.adapter', 'django.contrib.gis.db.backends.postgis.pgraster', 'django.contrib.gis.db.backends.postgis.const', 'django.contrib.gis.db.backends.postgis.models', 'django.contrib.gis.db.backends.base.models', 'django.contrib.gis.db.backends.postgis.schema', 'django.contrib.auth.validators', 'django.utils.translation.reloader', 'django.contrib.sessions.models', 'django.contrib.sessions.base_session', 'rest_framework.authtoken.models', 'file_reading.admin', 'validation.admin', 'django.contrib.auth.admin', 'django.contrib.auth.forms', 'django.contrib.auth.tokens', 'django.contrib.sites', 'django.contrib.sites.shortcuts', 'django.contrib.contenttypes.admin', 'django.contrib.contenttypes.fields', 'django.contrib.contenttypes.forms', 'rest_framework.authtoken.admin', 'django.contrib.admin.views.main', 'rest_framework.checks', 'django.contrib.staticfiles.management', 'django.contrib.staticfiles.management.commands', 'django.contrib.staticfiles.management.commands.runserver', 'django.contrib.staticfiles.handlers', 'urllib.request', 'urllib.error', 'urllib.response', 'nturl2path', 'django.contrib.staticfiles.views', 'django.views.static', 'django.core.handlers', 'django.core.handlers.asgi', 'django.core.handlers.base', 'django.core.handlers.exception', 'django.core.handlers.wsgi', 'django.core.management.commands', 'django.core.management.commands.runserver', 'django.core.servers', 'django.core.servers.basehttp', 'wsgiref', 'wsgiref.simple_server', 'http.server', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'django.core.wsgi', 'django.core.cache.backends.locmem', 'S100Ver_Val.urls', 'file_reading.api', 'rest_framework.routers', 'rest_framework.views', 'rest_framework.exceptions', 'rest_framework.status', 'rest_framework.utils', 'rest_framework.utils.serializer_helpers', 'rest_framework.utils.json', 'rest_framework.request', 'rest_framework.settings', 'django.test', 'django.test.client', 'django.test.signals', 'django.test.utils', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'django.test.testcases', 'django.core.management.sql', 'django.test.html', 'rest_framework.response', 'rest_framework.serializers', 'rest_framework.compat', 'django.contrib.postgres', 'django.contrib.postgres.fields', 'django.contrib.postgres.fields.array', 'django.contrib.postgres.lookups', 'django.contrib.postgres.search', 'django.contrib.postgres.forms', 'django.contrib.postgres.forms.array', 'django.contrib.postgres.validators', 'django.contrib.postgres.utils', 'django.contrib.postgres.forms.hstore', 'django.contrib.postgres.forms.jsonb', 'django.contrib.postgres.forms.ranges', 'django.contrib.postgres.fields.utils', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.hstore', 'django.contrib.postgres.fields.jsonb', 'django.contrib.postgres.fields.ranges', 'rest_framework.fields', 'rest_framework.utils.html', 'rest_framework.utils.humanize_datetime', 'rest_framework.utils.representation', 'rest_framework.utils.formatting', 'rest_framework.validators', 'rest_framework.utils.model_meta', 'rest_framework.utils.field_mapping', 'rest_framework.relations', 'rest_framework.reverse', 'rest_framework.utils.urls', 'rest_framework.schemas', 'rest_framework.schemas.coreapi', 'rest_framework.schemas.generators', 'django.contrib.admindocs', 'django.contrib.admindocs.views', 'django.contrib.admin.views.decorators', 'django.contrib.auth.decorators', 'django.shortcuts', 'django.contrib.admindocs.utils', 'rest_framework.schemas.inspectors', 'rest_framework.schemas.utils', 'rest_framework.mixins', 'rest_framework.schemas.openapi', 'rest_framework.renderers', 'rest_framework.utils.encoders', 'rest_framework.utils.breadcrumbs', 'rest_framework.authentication', 'rest_framework.permissions', 'rest_framework.parsers', 'rest_framework.negotiation', 'rest_framework.utils.mediatypes', 'rest_framework.metadata', 'rest_framework.schemas.views', 'rest_framework.urlpatterns', 'file_reading.views', 'file_reading.views.S100READINGFILE', 'file_reading.utils', 'file_reading.utils.cacheutility', 'h5py', 'h5py._errors', 'h5py.version', 'h5py.h5', '_cython_0_29_22', 'h5py.defs', 'h5py._objects', 'gc', 'h5py.h5py_warnings', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.h5p', 'h5py.h5s', 'h5py.utils', 'h5py.h5ac', 'h5py.h5z', 'h5py.h5a', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.filters', 'h5py._hl.compat', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'cached_property', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'rest_framework.viewsets', 'rest_framework.generics', 'rest_framework.decorators', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'file_reading.serializer', 'file_reading.serializer.S100UPLOADFILE', 'file_reading.serializer.S100UPDATEFILE', 'config', 'file_reading.utils.utils', 'file_reading.views.S100SAVEFILE', 'matplotlib', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImageSequence', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', 'matplotlib.units']
2021-12-02-12:28:34 [DEBUG] [matplotlib:224] CACHEDIR=C:\Users\shnt6940\.matplotlib
2021-12-02-12:28:34 [DEBUG] [matplotlib.font_manager:1439] Using fontManager instance from C:\Users\shnt6940\.matplotlib\fontlist-v330.json
2021-12-02-12:28:35 [DEBUG] [matplotlib.pyplot:291] Loaded backend tkagg version unknown.
2021-12-02-12:28:35 [DEBUG] [matplotlib.pyplot:291] Loaded backend TkAgg version unknown.
2021-12-02-12:28:35 [DEBUG] [matplotlib.pyplot:291] Loaded backend agg version unknown.
2021-12-02-12:28:35 [DEBUG] [asyncio:64] Using selector: SelectSelector
2021-12-02-12:28:46 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:28:46 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:53] Admin role id is 1
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:55] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:63] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:65] filename is 102CA0064700N07078W.h5
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:67] Status of selected Header of file is true
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:69] Status of selected Metadata of fie is false
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:75] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-12-02-12:28:56 [INFO] [root:87] file reading other case
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:90] firstkey of file is  BathymetryCoverage
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:92] secondkey of file is  BathymetryCoverage.01
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:94] thirdkey of file is  Group_001
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:96] Fourthkey of file is values
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]'}
2021-12-02-12:28:56 [DEBUG] [h5py._conv:77] Creating converter from 3 to 5
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']"}
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]'}
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']"}
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]'}
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']"}
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]'}
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:112] Dictionary of selected file header is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]'}
2021-12-02-12:28:56 [INFO] [file_reading.views.S100READINGFILE:115] Header of selected file is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:53] Admin role id is 1
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:55] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:63] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:65] filename is 102CA0064700N07078W.h5
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:67] Status of selected Header of file is false
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:69] Status of selected Metadata of fie is true
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:75] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-12-02-12:29:05 [INFO] [root:87] file reading other case
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:90] firstkey of file is  BathymetryCoverage
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:92] secondkey of file is  BathymetryCoverage.01
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:94] thirdkey of file is  Group_001
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:96] Fourthkey of file is values
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = eastBoundLongitude value = [-70.76]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = horizontalDatumReference value = ['EPSG']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = horizontalDatumValue value = [4326]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = issueDate value = ['2020-12-15Z']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = northBoundLatitude value = [47.02]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = productSpecification value = ['INT.IHO.S-102.2.1']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = southBoundLatitude value = [47.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:126] Key = westBoundLongitude value = [-70.78]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:128] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:135] 
 First Key = BathymetryCoverage

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = commonPointRule value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = dataCodingFormat value = [2]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = dimension value = [2]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = horizontalPositionUncertainty value = [-1.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = interpolationType value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = numInstances value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = sequencingRule.scanDirection value = ['Longitude, Latitude']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = sequencingRule.type value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:139] Key = verticalUncertainty value = [-1.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:141] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]'}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:146] BathymetryCoverage.01

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = eastBoundLongitude value = [-70.76]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = gridOriginLatitude value = [47.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = gridOriginLongitude value = [-70.78]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = gridSpacingLatitudinal value = [2.e-05]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = gridSpacingLongitudinal value = [2.e-05]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = northBoundLatitude value = [47.02]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = numGRP value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = numPointsLatitudinal value = [1001]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = numPointsLongitudinal value = [1001]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = southBoundLatitude value = [47.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = startSequence value = ['0,0']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:149] Key = westBoundLongitude value = [-70.78]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:153] Group_001

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:160] values

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:169] 
 Second Key = BathymetryCoverage

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = commonPointRule value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = dataCodingFormat value = [2]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = dimension value = [2]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = horizontalPositionUncertainty value = [-1.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = interpolationType value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = numInstances value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = sequencingRule.scanDirection value = ['Longitude, Latitude']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = sequencingRule.type value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:172] Key = verticalUncertainty value = [-1.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:175] BathymetryCoverage.01

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = eastBoundLongitude value = [-70.76]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = gridOriginLatitude value = [47.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = gridOriginLongitude value = [-70.78]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = gridSpacingLatitudinal value = [2.e-05]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = gridSpacingLongitudinal value = [2.e-05]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = northBoundLatitude value = [47.02]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = numGRP value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = numPointsLatitudinal value = [1001]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = numPointsLongitudinal value = [1001]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = southBoundLatitude value = [47.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = startSequence value = ['0,0']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:178] Key = westBoundLongitude value = [-70.78]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:182] 
 Third Key = BathymetryCoverage

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = commonPointRule value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = dataCodingFormat value = [2]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = dimension value = [2]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = horizontalPositionUncertainty value = [-1.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = interpolationType value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = numInstances value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = sequencingRule.scanDirection value = ['Longitude, Latitude']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = sequencingRule.type value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:185] Key = verticalUncertainty value = [-1.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:188] BathymetryCoverage.01

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = eastBoundLongitude value = [-70.76]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = gridOriginLatitude value = [47.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = gridOriginLongitude value = [-70.78]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = gridSpacingLatitudinal value = [2.e-05]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = gridSpacingLongitudinal value = [2.e-05]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = northBoundLatitude value = [47.02]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = numGRP value = [1]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = numPointsLatitudinal value = [1001]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = numPointsLongitudinal value = [1001]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = southBoundLatitude value = [47.]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = startSequence value = ['0,0']

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:191] Key = westBoundLongitude value = [-70.78]

2021-12-02-12:29:05 [INFO] [file_reading.views.S100READINGFILE:193] Dictionary of selected file metadata is {'eastBoundLongitude': '[-70.76]', 'horizontalDatumReference': "['EPSG']", 'horizontalDatumValue': '[4326]', 'issueDate': "['2020-12-15Z']", 'northBoundLatitude': '[47.02]', 'productSpecification': "['INT.IHO.S-102.2.1']", 'southBoundLatitude': '[47.]', 'westBoundLongitude': '[-70.78]', 'commonPointRule': '[1]', 'dataCodingFormat': '[2]', 'dimension': '[2]', 'horizontalPositionUncertainty': '[-1.]', 'interpolationType': '[1]', 'numInstances': '[1]', 'sequencingRule.scanDirection': "['Longitude, Latitude']", 'sequencingRule.type': '[1]', 'verticalUncertainty': '[-1.]', 'gridOriginLatitude': '[47.]', 'gridOriginLongitude': '[-70.78]', 'gridSpacingLatitudinal': '[2.e-05]', 'gridSpacingLongitudinal': '[2.e-05]', 'numGRP': '[1]', 'numPointsLatitudinal': '[1001]', 'numPointsLongitudinal': '[1001]', 'startSequence': "['0,0']"}
2021-12-02-12:29:37 [INFO] [file_reading.views.S100Map:32] Selected file is 102CA0064700N07078W.h5
2021-12-02-12:29:37 [INFO] [file_reading.views.S100Map:41] <HDF5 file "x-hdf5)>" (mode r)>File reads
2021-12-02-12:29:37 [INFO] [root:53] file reading other case
2021-12-02-12:29:37 [DEBUG] [matplotlib.colorbar:620] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000000A90AF98>
2021-12-02-12:29:37 [DEBUG] [matplotlib.colorbar:665] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000000000A90AF98> on colorbar
2021-12-02-12:29:37 [DEBUG] [matplotlib.colorbar:794] Setting pcolormesh
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1329] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (msyh.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1341] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-12-02-12:29:37 [DEBUG] [matplotlib.font_manager:1368] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\shnt6940\\Documents\\Shankar\\Noaa_Workspace\\S100Validation\\verfi_validation_env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-12-02-12:30:22 [INFO] [validation.views.S100PRODUCTLINE:32] <QuerySet [<ProductLineInfo: ProductLineInfo object (8)>, <ProductLineInfo: ProductLineInfo object (2)>]>
2021-12-02-12:30:23 [INFO] [validation.views.S100PRODUCTLINE:35] Data of productline is [OrderedDict([('name', 'S-102'), ('version', '020000'), ('date', '2021-10-25'), ('number', 102), ('updated_by', 'mndv'), ('updated_date', '2021-10-25')])]
2021-12-02-12:30:23 [INFO] [file_reading.views.S100LOGFILE:67] exiting from log reading file
